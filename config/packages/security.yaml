security:
    enable_authenticator_manager: true
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
      App\Entity\User:
        algorithm: auto


    role_hierarchy:
      ROLE_ADMIN : ROLE_ADMIN
      ROLE_SALARIE: ROLE_SALARIE
      ROLE_ENTREPRISE: [ ROLE_ENTREPRISE,ROLE_SALARIE,ROLE_ALLOWED_TO_SWITCH ]
      ROLE_CONSULTANT: ROLE_CONSULTANT
      ROLE_INSTITUTION: ROLE_INSTITUTION
      ROLE_MANITOU: [ ROLE_MANITOU,ROLE_RESPONSABLE,ROLE_ALLOWED_TO_SWITCH ]
      ROLE_RESPONSABLE: [ ROLE_RESPONSABLE,ROLE_NIVEAU1,ROLE_ALLOWED_TO_SWITCH ]
      ROLE_NIVEAU1: [ ROLE_NIVEAU1,ROLE_NIVEAU2,ROLE_ALLOWED_TO_SWITCH ]
      ROLE_NIVEAU2: [ ROLE_NIVEAU2,ROLE_NIVEAU3,ROLE_ALLOWED_TO_SWITCH ]
      ROLE_NIVEAU3: ROLE_NIVEAU3
      ROLE_GRANDCOMPTE: ROLE_GRANDCOMPTE
      ROLE_SYNDICAT : ROLE_SYNDICAT
      ROLE_ABONNE: ROLE_ABONNE
      ROLE_DEMANDEUR: ROLE_DEMANDEUR
      ROLE_INFINITE: [ROLE_INFINITE,ROLE_PREMIUM,ROLE_ALLOWED_TO_SWITCH]
      ROLE_PREMIUM: [ROLE_PREMIUM,ROLE_CLASSIC,ROLE_ALLOWED_TO_SWITCH]
      ROLE_CLASSIC: [ROLE_CLASSIC,ROLE_ALLOWED_TO_SWITCH]
      ROLE_FREE: [ROLE_FREE,ROLE_CLASSIC,ROLE_ALLOWED_TO_SWITCH]
      ROLE_MILITAIRE: ROLE_MILITAIRE
      ROLE_AE: ROLE_AE
      ROLE_SYNDIC : ROLE_SYNDIC
      ROLE_BTP : ROLE_BTP
      ROLE_ODI : ROLE_ODI
      ROLE_OTD : ROLE_OTD




  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email




        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
          pattern: ^/api/login
          stateless: true


          json_login:
            check_path: /api/login
            username_path: email
            password_path: password
            success_handler: lexik_jwt_authentication.handler.authentication_success
            failure_handler: lexik_jwt_authentication.handler.authentication_failure

        main:

            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\CustomAuthenticator

            logout:
                path: app_logout
                target : home
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/administrateur, roles: ROLE_ADMIN }
         - { path: ^/militaire, roles: ROLE_MILITAIRE}
         - { path: ^/api/demandeurs,roles: IS_AUTHENTICATED_ANONYMOUSLY,methods:[POST]}
         - { path: ^/api/demandeurs,roles: ROLE_DEMANDEUR,methods:[GET]}
         - { path: ^/api/intervention,roles: ROLE_DEMANDEUR,methods:[GET]}
         - { path: ^/api/etape1,roles: ROLE_DEMANDEUR,methods:[POST]}
         - { path: ^/api/etape2,roles: ROLE_DEMANDEUR,methods:[PATCH]}
         - { path: ^/api/etape3,roles: ROLE_DEMANDEUR,methods:[PATCH]}
         - { path: ^/api/etape4,roles: ROLE_DEMANDEUR,methods:[PATCH]}



        # - { path: ^/profile, roles: ROLE_USER }
